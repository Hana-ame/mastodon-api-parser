Update a filter
PUT /api/v2/filters/:id HTTP/1.1
Update a filter group with the given parameters.

Returns: Filter
OAuth: User token + write:filters
Version history:
4.0.0 - added

Request
Path parameters
:id
REQUIRED String. The ID of the Filter in the database.
Headers
Authorization
REQUIRED Provide this header with Bearer <user token> to gain authorized access to this API method.
Form data parameters
title
String. The name of the filter group.
context[]
Array of String. Where the filter should be applied. Specify at least one of home, notifications, public, thread, account.
filter_action
String. The policy to be applied when the filter is matched. Specify warn or hide.
expires_in
Integer. How many seconds from now should the filter expire?
keywords_attributes[][keyword]
String. A keyword to be added to the newly-created filter group.
keywords_attributes[][whole_word]
Boolean. Whether the keyword should consider word boundaries.
keywords_attributes[][id]
String. Provide the ID of an existing keyword to modify it, instead of creating a new keyword.
keywords_attributes[][_destroy]
Boolean. If true, will remove the keyword with the given ID.
Response
200: OK
Sample call:

PUT /api/v2/filters/25933
?keywords_attributes[][id]=34978
&keywords_attributes[][_destroy]=true
&keywords_attributes[][id]=34979
&keywords_attributes[][keyword]=baz
This will remove keyword 34978 (“foo”) and will replace keyword 34979 (“bar”) with a new keyword (“baz”)

{
"id": "25933",
"title": "test",
"context": [
"public"
],
"expires_at": null,
"filter_action": "warn",
"keywords": [
{
"id": "34979",
"keyword": "baz",
"whole_word": true
}
],
"statuses": []
}
401: Unauthorized
Invalid or missing Authorization header.

{
"error": "The access token is invalid"
}
404: Not found
Filter is not owned by you or does not exist. Alternatively, keywords_attributes[][id] was provided, there is no keyword with given id within this Filter.

{
"error": "Record not found"
}
