Register an account
POST /api/v1/accounts HTTP/1.1
Creates a user and account records. Returns an account access token for the app that initiated the request. The app should save this token for later, and should wait for the user to confirm their account by clicking a link in their email inbox.

Returns: Token
OAuth: App token + write:accounts
Version history:
2.7.0 - added
3.0.0 - added reason parameter
3.4.0 - added details to failure response

Request
Headers
Authorization
REQUIRED Provide this header with Bearer <user token> to gain authorized access to this API method.
Form data parameters
username
REQUIRED String. The desired username for the account
email
REQUIRED String. The email address to be used for login
password
REQUIRED String. The password to be used for login
agreement
REQUIRED Boolean. Whether the user agrees to the local rules, terms, and policies. These should be presented to the user in order to allow them to consent before setting this parameter to TRUE.
locale
REQUIRED String. The language of the confirmation email that will be sent.
reason
String. If registrations require manual approval, this text will be reviewed by moderators.
Response
200: OK
401: Unauthorized
{
"error": "The access token is invalid"
}
422: Unprocessable entity
The details parameter contains all detected errors. Its structure is a Hash with the key being the erroneous parameter, and its value being an array of all errors found.

Example error response:

{
"error": "Validation failed: Password can't be blank, Username must contain only letters, numbers and underscores, Agreement must be accepted",
"details": {
"password": [
{
"error": "ERR_BLANK",
"description": "can't be blank"
}
],
"username": [
{
"error": "ERR_INVALID",
"description": "must contain only letters, numbers and underscores"
}
],
"agreement": [
{
"error": "ERR_ACCEPTED",
"description": "must be accepted"
}
]
}
}
You may expect the following errors:

ERR_BLOCKED
When e-mail provider is not allowed
ERR_UNREACHABLE
When e-mail address does not resolve to any IP via DNS (MX, A, AAAA)
ERR_TAKEN
When username or e-mail are already taken
ERR_RESERVED
When a username is reserved, e.g. “webmaster” or “admin”
ERR_ACCEPTED
When agreement has not been accepted
ERR_BLANK
When a required attribute is blank
ERR_INVALID
When an attribute is malformed, e.g. wrong characters or invalid e-mail address
ERR_TOO_LONG
When an attribute is over the character limit
ERR_TOO_SHORT
When an attribute is under the character requirement
ERR_INCLUSION
When an attribute is not one of the allowed values, e.g. unsupported locale
429: Rate limited
{
"error": "Too many requests"
}
