Mastodon
What is Mastodon?
USING MASTODON
Signing up for an account
Setting up your profile
Posting to your profile
Using the network features
Dealing with unwanted content
Promoting yourself and others
Set your preferences
More settings
Using Mastodon externally
Moving or leaving accounts
Running your own server
RUNNING MASTODON
Preparing your machine
Installing from source
Configuring your environment
Configuring full-text search
Installing optional features
Configuring object storage
Onion services
Single Sign On
Setting up your new instance
Using the admin CLI
Upgrading to a new release
Backing up your server
Migrating to a new machine
Scaling up your server
Moderation actions
Troubleshooting errors
Database index corruption
DEVELOPING MASTODON APPS
Getting started with the API
Playing with public data
Obtaining client app access
Logging in with an account
Libraries and implementations
CONTRIBUTING TO MASTODON
Technical overview
Setting up a dev environment
Code structure
Routes
Bug bounties and responsible disclosure
SPEC COMPLIANCE
ActivityPub
WebFinger
Security
Microformats
OAuth
Bearcaps
REST API
Guidelines and best practices
OAuth Scopes
Rate limits
API METHODS
apps
oauth
emails
accounts
bookmarks
favourites
mutes
blocks
domain_blocks
filters
reports
follow_requests
endorsements
featured_tags
preferences
followed_tags
suggestions
tags
profile
statuses
media
polls
scheduled_statuses
timelines
conversations
lists
markers
streaming
notifications
push
search
instance
trends
directory
custom_emojis
announcements
admin
admin/accounts
admin/domain_blocks
admin/reports
admin/trends
canonical_email_blocks
dimensions
domain_allows
email_domain_blocks
ip_blocks
measures
retention
proofs
oembed
API ENTITIES
Account
Admin::Account
Admin::CanonicalEmailBlock
Admin::Cohort
Admin::Dimension
Admin::DomainAllow
Admin::DomainBlock
Admin::EmailDomainBlock
Admin::Ip
Admin::IpBlock
Admin::Measure
Admin::Report
Announcement
Application
Context
Conversation
CustomEmoji
DomainBlock
Error
ExtendedDescription
FamiliarFollowers
FeaturedTag
Filter
FilterKeyword
FilterResult
FilterStatus
IdentityProof
Instance
List
Marker
MediaAttachment
Notification
Poll
Preferences
PreviewCard
Reaction
Relationship
Report
Role
Rule
ScheduledStatus
Search
Status
StatusEdit
StatusSource
Suggestion
Tag
Token
Translation
V1::Filter
V1::Instance
WebPushSubscription
List
Represents a list of some users that the authenticated user follows.

Example
Attributes
id
title
replies_policy
See also
Example
{
  "id": "12249",
  "title": "Friends"
}
Attributes
id
Description: The internal database ID of the list.
Type: String (cast from an integer, but not guaranteed to be a number)
Version history:
2.1.0 - added

title
Description: The user-defined title of the list.
Type: String
Version history:
2.1.0 - added

replies_policy
Description: Which replies should be shown in the list.
Type: String (Enumerable oneOf)
followed = Show replies to any followed user
list = Show replies to members of the list
none = Show replies to no one
Version history:
3.3.0 - added

See also
GET /api/v1/accounts/:id/lists
lists API methods
app/serializers/rest/list_serializer.rb
Last updated December 14, 2022 · Improve this page

Sponsored by
Dotcom-Monitor
LoadView
Stephen Tures
Swayable
SponsorMotion
Join Mastodon · Blog ·  · 
View source · CC BY-SA 4.0 · Imprint